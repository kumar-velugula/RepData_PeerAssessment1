strptime(data[1,2], "%H:%M:%S")
strptime(paste(data[1,1], data[1,2]), "%d/%m/%Y %H:%M:%S")
head(filteredDta)
filteredData <- data[l1 | l2 , ];
head(filteredData)
filteredData[,1] <-  strptime(paste(filteredData[,1], filteredData[,2]), "%d/%m/%Y %H:%M:%S")
paste(filteredData[,1], filteredData[,2]
paste(filteredData[,1], filteredData[,2])
head(paste(filteredData[,1], filteredData[,2]))
dateTime <- paste(filteredData[,1], filteredData[,2])
head(dateTime)
tail(dateTime)
dateTime <- paste(as.Date(filteredData[,1]), filteredData[,2])
dateTime <- paste(as.Date(filteredData$Date), filteredData$Time)
head(filteredData$Date)
tail(filteredData$Date)
head(filteredData)
head(data)
data[1,] <- as.Date(data[,1],"%d/%m/%Y")
##logical vectors to filter data for dates 2/1/2007 and 2/2/2007
l1 <- as.Date(data[,1],"%d/%m/%Y") == as.Date("2007-02-01")
l2 <- as.Date(data[,1],"%d/%m/%Y") == as.Date("2007-02-02")
##filteredData contains data for Feb 1st and 2nd dates only
filteredData <- data[l1 | l2 , ];
head(filteredData)
head(data)
filteredData <- data[l1 | l2 , ];
head(filteredData)
dateTime <- paste(filteredData$Date, filteredData$Time)
head(dateTime)
filteredData$DateTime <- as.POSIXct(dateTime)
l <- is.na(filteredData)
l
filteredData[l]
l3 <- is.na(filteredData);
filteredData <- filteredData[!l3]
dim(filteredData)
filteredData
str(filteredData)
filteredData <- data[l1 | l2 , ];
l3 <- is.na(filteredData);
filteredData <- filteredData[!l3,]
head(filteredData)
filteredData[l3,]
str(filteredData)
tail(filteredData)
head(filteredData)
filteredData <- data[l1 | l2 , ];
l3 <- is.na(filteredData$Date);
filteredData <- filteredData[!l3,]
dim(filteredData)
filteredData[l3,]
filteredData
head(filteredData)
tail(filteredDAta)
tail(filteredData)
hist(Global_active_power)
hist(filteredData$Global_active_power)
hist(filteredData$Global_active_power, col="red")
hist(filteredData$Global_active_power, xlab="Global Active Power (kilowatts)",, ylab="Frequency", col="red")
hist(filteredData$Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab="Frequency", col="red")
source('~/Desktop/Coursera/ExploratorDataAnalysis/downloadFile.R')
downloadfile()
traceback()
hist(filteredData$Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab="Frequency", col="red");
filteredData <- filteredData[!is.na(filteredData$Date),];
hist(filteredData$Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab="Frequency", col="red");
filteredData <- filteredData[!is.na(filteredData$Date),];
hist(filteredData$Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab="Frequency", col="red");
source('~/Desktop/Coursera/ExploratorDataAnalysis/downloadFile.R')
downloadfile()
downloadfile()
source('~/Desktop/Coursera/ExploratorDataAnalysis/downloadFile.R')
source('~/Desktop/Coursera/ExploratorDataAnalysis/downloadFile.R')
plot1()
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot1.R')
plot(filteredData$Global_active_power,as.Date(filteredData$Date), main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab="Frequency");
plot(as.Date(filteredData$Date),filteredData$Global_active_power, main="Global Active Power", xlab="Date", ylab="Global Active Power (kilowatts)");
filteredData[1,1]
plot(weekdays(as.Date(filteredData$Date)),filteredData$Global_active_power, main="Global Active Power", xlab="Date", ylab="Global Active Power (kilowatts)");
datetime <- paste(as.Date(data$Date), data$Time)
datetime <- paste(as.Date(filteredData$Date), filteredData$Time)
filteredData$DateTime <- datetime
head(filteredData)
datetime <- paste(as.Date(filteredData$Date,format="%m/%d/%Y"), filteredData$Time)
head(datetime)
filteredData$DateTime <- datetime
head(filteredData)
datetime <- paste(as.Date(filteredData$Date,format="%d/%m/%Y"), filteredData$Time)
datetime
filteredData$DateTime <- datetime
head(filteredData)
filteredData$DateTime <- as.POSIXct(datetime)
filteredData$DateTime
plot(filteredData$DateTime~filteredData$Global_active_power,type="1", ylab="Global Active Power (kilowatts)");
plot(filteredData$DateTime~filteredData$Global_active_power,type="l", ylab="Global Active Power (kilowatts)");
plot(filteredData$Global_active_power~filteredData$DateTime,type="l", ylab="Global Active Power (kilowatts)");
plot(filteredData$Global_active_power~filteredData$DateTime,type="l", ylab="Global Active Power (kilowatts)", xlab="");
plot2()
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot2.R')
plot2()
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot3.R')
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot3.R')
library(datasets)
with(airquality, plot(Wind, Ozone, main="Ozone and Wind in New York City", type="n"))
with(subset(airquality, Month==5), points(Wind, Ozone, col="blue"))
with(subset(airquality, Month != 5), points(Wind, Ozone, col="red"))
legend("topright", pch=1, col=c("blue", "red"), legend=c("May", "Other Months”))
legend("topright", pch=1, col=c("blue", "red"), legend=c("May", "Other Months”))
?legend
legend("topright", pch=1, col=c("blue", "red"), legend=c("May", "Other Months”))
?legend
with(subset(airquality, Month != 5), points(Wind, Ozone, col="red")); legend("topright", pch=1, col=c("blue", "red"), legend=c("May", "Other Months”))
legend(Wind,Ozone, "topright", pch=1, col=c("blue", "red"), legend=c("May", "Other Months”))
legend("topright", pch=1, col=c("blue", "red"))
legend("topright", pch=1, col=c("blue", "red"), legend=c("May","Other Months"))
plot(filteredData$Global_active_power~filteredData$DateTime,type="l", ylab="Global Active Power (kilowatts)", xlab="");
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="l", ylab="Global Active Power (kilowatts)", xlab="");
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="");
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot3.R')
plot(filteredData$Sub_metering_2~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="red");
plot(filteredData$Sub_metering_3~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="blue");
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="black");
lines(filteredData$Sub_metering_2~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="red");
lines(filteredData$Sub_metering_3~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="blue");
legend("topright", pch=1, col=c("black","red", "blue"), legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
?pch
?legend
legend("topright", pch=1, lty=c(1,1), col=c("black","red", "blue"), legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="n");
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="black");
lines(filteredData$Sub_metering_2~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="red");
lines(filteredData$Sub_metering_3~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="blue");
legend("topright", pch=1, lty=c(1,1), col=c("black","red", "blue"), legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="n");
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="black");
lines(filteredData$Sub_metering_2~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="red");
lines(filteredData$Sub_metering_3~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="blue");
legend("topright", pch=1, lty=c(1,1), col=c("black","red", "blue"), legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="n");
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="black");
lines(filteredData$Sub_metering_2~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="red");
lines(filteredData$Sub_metering_3~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="blue");
legend("topright", lty=c(1,1), col=c("black","red", "blue"), legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot3.R')
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="n");
plot(filteredData$Sub_metering_1~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="black");
lines(filteredData$Sub_metering_2~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="red");
lines(filteredData$Sub_metering_3~filteredData$DateTime,type="l", ylab="Energy sub metering", xlab="", col="blue");
legend("topright", lty=c(1,1), col=c("black","red", "blue"), legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot3.R')
plot3()
?type
?plot type
help(plot)
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot3.R')
plot3()
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot4.R')
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot4.R')
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot4.R')
plot4()
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot4.R')
plot3()
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot3.R')
plot3()
plot4.png
plot4()
plot3()
plot3()
?legend
?png()
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot3.R')
plot3()
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot3.R')
plot4()
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot2.R')
plot2()
source('~/Desktop/Coursera/ExploratorDataAnalysis/plot1.R')
plot1()
source("plot1.R")
plot1()
>library(kernlab)
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
set.seed(3435)
trainIndicator = rbinom(4601,size=1, prob=0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator==0.1,]
testSpam = spam[trainIndicator== 1,]
trainSpam = spam[trainIndicator==1,]
testSpam = spam[trainIndicator== 0,]
head(trainSpam)
str(trainSpam)
str(testSpam)
names(trainSpam)
head(trainSpa)
head(trainSpam)
table(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[,1:4]+1))
pbeta(c(0.4,0.5,0.6), 2, 1)
?qunif
qunif(c(0.75), min=0, max=1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
?mean
library(lattice)
library(datasets)
xyplot(Ozone~Wind, data=airquality)
airquality <- transform(airquality, Month=factor(Mont))
airquality <- transform(airquality, Month=factor(Month))
xyplot(Ozone ~ Wind | Month, data=airquality, layout=c(5,1))
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each=50)
y <- x + f - f*x + rnorm(100, sd=0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~x, | f, layout = c(2,1))
xyplot(y ~x | f, layout = c(2,1))
source('~/Desktop/Coursera/ExploratorDataAnalysis/Week2/plotTest.R')
plotTest()
source('~/Desktop/Coursera/ExploratorDataAnalysis/Week2/plotTest.R')
plotTest()
library(ggplot2)
str(mpg)
qplot(displ, hwy,data=mpg)
qplot(displ, hwy,data=mpg, color=drv)
qplot(displ, hwy,data=mpg, color=drv, geom=c("point", "smooth"))
qplot(displ, hwy,data=mpg, geom=c("point", "smooth"))
qplot(hwy,data=mpg, fill=drv)
qplot(displ,hwy,data=mpg, facets =.~drv)
qplot(displ,hwy,data=mpg, facets =.~drv, binwidth=12)
qplot(displ,hwy,data=mpg, facets =drv~., binwidth=12)
qplot(displ,hwy,data=mpg, facets =drv~., binwidth=2)
qplot(hwy,data=mpg, facets =drv~., binwidth=2)
str(maacs)
testdata <- data.frame(x=1:100, y=rnorm(100))
testdata[50,2] <- 100
plot(testdata$x, testdata$y, type="l", ylim=c(-3,3))
g <- ggplot(testdata, aes(x=x,y=y))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line() + coord_cartesian(ylim=c(-3,3))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(movies)
library(ggplot2)
library(movies)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
?lpoints
?text
?lines
?points
?lpoints
?trellis.par.set
?panel.lmline
?axis
?text
?panel.abline
library(stats)
fit <- lm(Ozone ~ Wind * Solar.R*Temp, data=airquality)
summary(fit)
?markdown
library(xtable)
install.packages("xtable")
library(xtable)
setwd("~/Desktop/Coursera/ReproducibleResearch/RepData_PeerAssessment1")
ls()
getwd()
unzip("activity.zip")
data <- read.csv("activity.csv")
head(data)
?read.csv
summary(data)
?hist
hist(steps)
hist(data$steps)
hist(data$steps)
tail(data)
head(data)
?head
head(data, n=10)
data <- read.csv("activity.csv", na.rm=T)
data <- read.csv("activity.csv", na.rm=TRUE)
?read.csv
str(data)
dataFilteredNA <- data[!is.na(data$steps)]
dataFilteredNA <- data[!is.na(data$steps),]
head(dataFilterdNA)
head(dataFilteredNA)
hist(dataFilteredNA$steps)
tail(dataFilteredNA)
head(dataFilteredNA,n=100)
dataFilteredNA <- data[!is.na(data$steps) & data$steps > 0,]
str(dataFilteredNA)
head(dataFilteredNA,n=100)
tail(dataFilteredNA)
dataFilteredNA <- data[!is.na(data$steps),]
str(dataFilteredNA)
data1 <- data %>% group_by(date) %>% summarize(Count = sum(steps))
library(dplyr)
data1 <- data %>% group_by(date) %>% summarize(Count = sum(steps))
head(data1)
tail(data1)
data1 <- data %>% group_by(date) %>% !is.na(steps) %>% summarize(Count = sum(steps))
data1 <- data %>%!is.na(steps) %>%  group_by(date) %>% summarize(Count = sum(steps))
data1 <- data %>% group_by(date) %>% summarize(Count = sum(steps))
hist(data1$Count)
data1 <- data %>% group_by(date) %>% summarize(Count = sum(steps, na.rm=T))
hist(data1$Count)
data1 <- data %>% group_by(date) %>% summarize(StepsTotal = sum(steps, na.rm=T))
hist(data1$StepsTotal)
data1
?hist
mean(data1$StepsTotalPerDay)
str(data1)
?mean
data1 %>% summarize(Mean = mean(StepsTotal))
mean(data1$StepsTotal)
summarize(data1)
summary(data1)
str(data1)
hist(data1$StepsTotal)
hist(data1$StepsTotal, breaks=0:60)
hist(data1$StepsTotal, breaks=c(0:60))
hist(data1$StepsTotal, breaks=c(0,60))
hist(data1$StepsTotal, breaks=c(10,30,50,60))
hist(data1$StepsTotal, breaks="StepsTotal")
hist(data1$StepsTotal, breaks="fd")
hist(data1$StepsTotal, breaks="sturges")
hist(data1$StepsTotal, breaks="sturges")
mean(data1)
mean(data1$StepsTotal)
median(data1$StepsTotal)
summary(data1)
data
tail(data)
data2 <- data %>% group_by(interval) %>% summarize(StepsAveragePerInterval = mean(steps, na.rm=T))
data2
tail(data2)
library(ggplot2)
plot(data2)
str(dat2)
str(data2)
as.character(data2$interval)
as.POSIXct(data2$interval)
as.POSIXct(data2$interval, origin = "1960-01-01")
as.character(data2$interval)
data2$interval
data2$interval <- as.character(data2$interval)
str(data2)
data$interval <- as.character(data$interval)
data2 <- data %>% group_by(interval) %>% summarize(StepsAveragePerInterval = mean(steps, na.rm=T))
yplot(StepsAveragePerInterval~interval, data=data2, type="l")
xyplot(StepsAveragePerInterval~interval, data=data2, type="l")
data
str(data)
data$interval <- as.POSIXct(data$interval,"2012-10-01 12:00:00")
data$interval <- as.POSIXct(data$interval,origin="2012-10-01 12:00:00")
data <- read.csv("activity.csv")
data$interval <- as.POSIXct(data$interval,origin="2012-10-01 12:00:00")
str(data)
data$interval <- as.POSIXct(data$interval,origin="2012-10-01 12:00:00", tz="GMT")
str(data)
data$interval <- as.POSIXct(data$interval,origin="2012-10-01 12:00:00", tz="EST")
str(data)
data$interval <- as.POSIXct(data$interval,origin="2012-10-01 12:00:00", tz="UTC")
str(data)
data2 <- data %>% group_by(interval) %>% summarize(StepsAveragePerInterval = mean(steps, na.rm=T))
xyplot(StepsAveragePerInterval~interval, data=data2, type="l")
data$interval <- as.POSIXct(data$interval,origin="12:00:00", tz="UTC")
str(data)
data$interval <- as.POSIXct(data$interval,origin="00:00:00", tz="UTC")
str(data)
data$interval <- as.POSIXlt(data$interval,origin="00:00:00", tz="UTC")
str(data)
data2 <- data %>% group_by(interval) %>% summarize(StepsAveragePerInterval = mean(steps, na.rm=T))
str(data2)
str(data)
head(data)
tail(data)
data2 <- data %>% group_by(interval) %>% summarize(AverageStepsPerInterval = mean(steps, na.rm=T))
data2 <- data %>% group_by(interval) %>% summarize(AverageStepsPerInterval = mean(steps, na.rm=T))
data <- read.csv("activity.csv")
data2 <- data %>% group_by(interval) %>% summarize(AverageStepsPerInterval = mean(steps, na.rm=T))
head(data2)
data2[which.max(AverageStepsPerInterval),]
data2[which.max(AverageStepsPerInterval),]
data2
data2[which.max(data2$AverageStepsPerInterval),]
is.na(data$steps)
any(is.na(data$steps))
sum(is.na(data$steps))
str(data2)
str(data)
data3 <- merge(data, data2, by.x= "interval", by.y="interval")
head(data3)
str(data)
str(data3)
is.na(data3$steps)
data3NA <- data3[is.na(data3$steps),]
head(data3NA)
data3[is.na(data3$steps),2]
data3[is.na(data3$steps),4]
data3[is.na(data3$steps),2] <- data3[is.na(data3$steps),4]
data3[is.na(data3$steps),]
head(data3)
data3[,data3$steps]
data3[,data3$V2]
data3[,data3$steps]
data3[3,1]
data3[3,]
data3[3,3]
data3[3,3][1]
data3[3,][1]
data3[3,][3]
weekday(data3[3,][3])
weekdays(data3[3,][3])
weekdays(data3[3,])
weekdays(data3[,3])
str(data3)
as.date(as.character(data3$date))
as.character(data3$date)
as.POSXlt(as.character(data3$date))
as.date(data3$date)
as.ate(data3$date)
as.Date(data3$date)
weekdays(as.Date(data3$date))
daycategory <= function(x){
day <- weekdays(as.Date(x))
if(day = 'Saturday' | day = 'Sunday')
return 'Weekend'
else
return 'Weekday'
}
source('~/Desktop/Coursera/ExploratorDataAnalysis/Week2/plotTest.R')
source('~/Desktop/Coursera/ExploratorDataAnalysis/Week2/plotTest.R')
source('~/Desktop/Coursera/ExploratorDataAnalysis/Week2/plotTest.R')
source('~/Desktop/Coursera/ExploratorDataAnalysis/Week2/plotTest.R')
daycategory('2010-01-31')
daycategory('2010-01-30')
daycategory('2010-01-29')
mdply(data3, function(date) daycategory(date))
library(plyr)
?mapply
mapply(data3, function(date) daycategory(date))
sapply(data3, function(date) daycategory(date))
sapply(data3, function(x) daycategory(x$date))
sapply(data3, function(x) daycategory(date))
sapply(data3, function(date) daycategory(date))
traceback()
str(data3)
data3$dayname = weekdays(as.Date(data3$date))
str(data3)
data3$dayname = weekdays(as.Date(data3$date))
str(data3)
sapply(data3, daycategory(data3$date) )
sapply(data3,3, daycategory(data3$date) )
data3$daycategory = as.factor(apply(as.matrix(data3$dayname),1, daycategory))
as.matrix(data3$dayname)
data3$daycategory = as.factor(apply(as.matrix(data3$dayname),1, daycategory))
apply(as.matrix(data3$dayname),1, daycategory)
?apply
apply(data3$dayname,1, daycategory)
lapply(data3, function(data3$date){})
lapply(data3, function(data3$date){ daycategory(x) })
lapply(data3, daycategory(data3$date))
debug(daycategory)
lapply(data3, daycategory(data3$date))
x
day
source('~/Desktop/Coursera/ExploratorDataAnalysis/Week2/plotTest.R')
source('~/Desktop/Coursera/ExploratorDataAnalysis/Week2/plotTest.R')
source('~/Desktop/Coursera/ExploratorDataAnalysis/Week2/plotTest.R')
n
lapply(data3, daycategory(data3$date))
daycategory('2010-01-30')
daycategory('2010-01-3')
daycategory('2010-01-9')
daycategory('2010-01-09')
daycategory('2010-01-12')
daycategory('2010-01-13')
daycategory('2010-01-14')
daycategory('2015-05-14')
daycategory('2015-05-15')
daycategory('2015-05-16')
daycategory('2015-05-17')
daycategory(data3$date)
head(data3)
library(knitr)
knit2html(“PA1_template.Rmd”)
library(knitr)
?knit2html
knit2html("PA1_template.Rmd")
